apply from: './dependencies.gradle'

buildscript {
    ext.kotlin_version = '1.6.10'
    ext.gradle_tools = '3.1.3'
    ext.build_tools = '31.0.0'
    ext.nav_version = '2.3.0'
    ext.dokka_version = '1.4.32'

    ext.compile_sdk = 31
    ext.target_sdk = 31
    ext.min_sdk = 24
    ext.compose_version = '1.2.0-alpha03'

    ext.application_id = 'com.anytypeio.anytype'
    ext.version_name = '1.0'
    ext.version_code = 1
    ext.test_runner = 'androidx.test.runner.AndroidJUnitRunner'

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.squareup.wire:wire-gradle-plugin:4.0.1'
    }
}

def testDebugAll = tasks.create("testDebugAll")

subprojects {
    plugins.withId("kotlin") {
        testDebugAll.dependsOn(tasks.named("test"))
    }
    plugins.withId("com.android.library") {
        afterEvaluate {
            testDebugAll.dependsOn(tasks.named("testDebugUnitTest"))
        }
    }
    plugins.withId("com.android.application") {
        afterEvaluate {
            testDebugAll.dependsOn(tasks.named("testDebugUnitTest"))
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
