apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config["compile_sdk"]

    defaultConfig {
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]

        testInstrumentationRunner config["test_runner"]
    }

    buildTypes {
        debug {
            buildConfigField ANYTYPE_CLIPBOARD_URI_TYPE, ANYTYPE_CLIPBOARD_URI, ANYTYPE_CLIPBOARD_URI_VALUE
            buildConfigField ANYTYPE_CLIPBOARD_LABEL_TYPE, ANYTYPE_CLIPBOARD_LABEL, ANYTYPE_CLIPBOARD_LABEL_VALUE
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField ANYTYPE_CLIPBOARD_URI_TYPE, ANYTYPE_CLIPBOARD_URI, ANYTYPE_CLIPBOARD_URI_VALUE
            buildConfigField ANYTYPE_CLIPBOARD_LABEL_TYPE, ANYTYPE_CLIPBOARD_LABEL, ANYTYPE_CLIPBOARD_LABEL_VALUE
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

dependencies {
    def applicationDependencies = rootProject.ext.mainApplication
    def unitTestDependencies = rootProject.ext.unitTesting

    implementation project(':data')
    implementation project(':core-models')

    implementation applicationDependencies.kotlin
    implementation applicationDependencies.coroutinesAndroid
    implementation applicationDependencies.timber

    testImplementation project(":test:utils")
    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.kotlinTest
    testImplementation unitTestDependencies.androidXTestCore
    testImplementation unitTestDependencies.robolectricLatest
}